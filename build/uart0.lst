
build/uart0.o:     file format elf32-littleriscv


Disassembly of section .text._ZN5Uart0C2Ev:

00000000 <_ZN5Uart0C1Ev>:
#include "uart0.h"

Uart0::Uart0() {
   0:	1101                	addi	sp,sp,-32
   2:	ce06                	sw	ra,28(sp)
   4:	cc22                	sw	s0,24(sp)
   6:	1000                	addi	s0,sp,32
   8:	fea42623          	sw	a0,-20(s0)
    init();
   c:	fec42503          	lw	a0,-20(s0)
  10:	00000097          	auipc	ra,0x0
			10: R_RISCV_CALL	_ZN5Uart04initEv
			10: R_RISCV_RELAX	*ABS*
  14:	000080e7          	jalr	ra # 10 <_ZN5Uart0C1Ev+0x10>
}
  18:	0001                	nop
  1a:	40f2                	lw	ra,28(sp)
  1c:	4462                	lw	s0,24(sp)
  1e:	6105                	addi	sp,sp,32
  20:	8082                	ret

Disassembly of section .text._ZN5Uart08sendByteEh:

00000000 <_ZN5Uart08sendByteEh>:

void Uart0::sendByte(uint8_t byte) {
   0:	1101                	addi	sp,sp,-32
   2:	ce22                	sw	s0,28(sp)
   4:	1000                	addi	s0,sp,32
   6:	fea42623          	sw	a0,-20(s0)
   a:	87ae                	mv	a5,a1
   c:	fef405a3          	sb	a5,-21(s0)

00000010 <.L4>:
    while(!(USART0->STAT & USART_STAT_TBE)){}
  10:	400147b7          	lui	a5,0x40014
  14:	80078793          	addi	a5,a5,-2048 # 40013800 <.LASF50+0x40013582>
  18:	439c                	lw	a5,0(a5)
  1a:	0807f793          	andi	a5,a5,128
  1e:	0017b793          	seqz	a5,a5
  22:	0ff7f793          	andi	a5,a5,255
  26:	c391                	beqz	a5,2a <.L3>
			26: R_RISCV_RVC_BRANCH	.L3
  28:	b7e5                	j	10 <.L4>
			28: R_RISCV_RVC_JUMP	.L4

0000002a <.L3>:
    USART0->DATA = byte;
  2a:	400147b7          	lui	a5,0x40014
  2e:	80078793          	addi	a5,a5,-2048 # 40013800 <.LASF50+0x40013582>
  32:	feb44703          	lbu	a4,-21(s0)
  36:	c3d8                	sw	a4,4(a5)

00000038 <.L6>:
    while(!(USART0->STAT & USART_STAT_TC)){}
  38:	400147b7          	lui	a5,0x40014
  3c:	80078793          	addi	a5,a5,-2048 # 40013800 <.LASF50+0x40013582>
  40:	439c                	lw	a5,0(a5)
  42:	0407f793          	andi	a5,a5,64
  46:	0017b793          	seqz	a5,a5
  4a:	0ff7f793          	andi	a5,a5,255
  4e:	c391                	beqz	a5,52 <.L7>
			4e: R_RISCV_RVC_BRANCH	.L7
  50:	b7e5                	j	38 <.L6>
			50: R_RISCV_RVC_JUMP	.L6

00000052 <.L7>:
}
  52:	0001                	nop
  54:	4472                	lw	s0,28(sp)
  56:	6105                	addi	sp,sp,32
  58:	8082                	ret

Disassembly of section .text._ZN5Uart07sendStrEPc:

00000000 <_ZN5Uart07sendStrEPc>:
void Uart0::sendStr(char* str) {
   0:	1101                	addi	sp,sp,-32
   2:	ce06                	sw	ra,28(sp)
   4:	cc22                	sw	s0,24(sp)
   6:	1000                	addi	s0,sp,32
   8:	fea42623          	sw	a0,-20(s0)
   c:	feb42423          	sw	a1,-24(s0)

00000010 <.L10>:
    while(*str!='\0') {
  10:	fe842783          	lw	a5,-24(s0)
  14:	0007c783          	lbu	a5,0(a5)
  18:	c395                	beqz	a5,3c <.L11>
			18: R_RISCV_RVC_BRANCH	.L11
        sendByte(*str);
  1a:	fe842783          	lw	a5,-24(s0)
  1e:	0007c783          	lbu	a5,0(a5)
  22:	85be                	mv	a1,a5
  24:	fec42503          	lw	a0,-20(s0)
  28:	00000097          	auipc	ra,0x0
			28: R_RISCV_CALL	_ZN5Uart08sendByteEh
			28: R_RISCV_RELAX	*ABS*
  2c:	000080e7          	jalr	ra # 28 <.L10+0x18>
        str++;
  30:	fe842783          	lw	a5,-24(s0)
  34:	0785                	addi	a5,a5,1
  36:	fef42423          	sw	a5,-24(s0)
    while(*str!='\0') {
  3a:	bfd9                	j	10 <.L10>
			3a: R_RISCV_RVC_JUMP	.L10

0000003c <.L11>:
    }
}
  3c:	0001                	nop
  3e:	40f2                	lw	ra,28(sp)
  40:	4462                	lw	s0,24(sp)
  42:	6105                	addi	sp,sp,32
  44:	8082                	ret

Disassembly of section .text._ZN5Uart04initEv:

00000000 <_ZN5Uart04initEv>:

void Uart0::init() {
   0:	1101                	addi	sp,sp,-32
   2:	ce22                	sw	s0,28(sp)
   4:	1000                	addi	s0,sp,32
   6:	fea42623          	sw	a0,-20(s0)
    // Tx A9 Rx A10
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN;       
   a:	400217b7          	lui	a5,0x40021
   e:	4f98                	lw	a4,24(a5)
  10:	400217b7          	lui	a5,0x40021
  14:	00576713          	ori	a4,a4,5
  18:	cf98                	sw	a4,24(a5)
    GPIOA->CRH = 0;
  1a:	400117b7          	lui	a5,0x40011
  1e:	80078793          	addi	a5,a5,-2048 # 40010800 <.LASF50+0x40010582>
  22:	0007a223          	sw	zero,4(a5)
    GPIOA->CRH |=  (1<<6) | (3<<4); //CTL9=0:1; MD9=1:1  AF push-pull max speed
  26:	400117b7          	lui	a5,0x40011
  2a:	80078793          	addi	a5,a5,-2048 # 40010800 <.LASF50+0x40010582>
  2e:	43d8                	lw	a4,4(a5)
  30:	400117b7          	lui	a5,0x40011
  34:	80078793          	addi	a5,a5,-2048 # 40010800 <.LASF50+0x40010582>
  38:	07076713          	ori	a4,a4,112
  3c:	c3d8                	sw	a4,4(a5)
    GPIOA->CRH |=  (1<<10) | (0<<8); //CTL10=0:1; MD9=0:0  input floating (HiZ)
  3e:	400117b7          	lui	a5,0x40011
  42:	80078793          	addi	a5,a5,-2048 # 40010800 <.LASF50+0x40010582>
  46:	43d8                	lw	a4,4(a5)
  48:	400117b7          	lui	a5,0x40011
  4c:	80078793          	addi	a5,a5,-2048 # 40010800 <.LASF50+0x40010582>
  50:	40076713          	ori	a4,a4,1024
  54:	c3d8                	sw	a4,4(a5)
    RCC->APB2ENR |= RCC_APB2ENR_USART0EN;
  56:	400217b7          	lui	a5,0x40021
  5a:	4f94                	lw	a3,24(a5)
  5c:	400217b7          	lui	a5,0x40021
  60:	6711                	lui	a4,0x4
  62:	8f55                	or	a4,a4,a3
  64:	cf98                	sw	a4,24(a5)
    USART0->BAUD = 0x341;//(8000000-4800)/9600 = 832,8 = 0x341
  66:	400147b7          	lui	a5,0x40014
  6a:	80078793          	addi	a5,a5,-2048 # 40013800 <.LASF50+0x40013582>
  6e:	34100713          	li	a4,833
  72:	c798                	sw	a4,8(a5)
    USART0->CTL0 |= (USART_CTL0_UEN | USART_CTL0_REN | USART_CTL0_TEN | USART_CTL0_RBNEIE | USART_CTL0_TCIE);
  74:	400147b7          	lui	a5,0x40014
  78:	80078793          	addi	a5,a5,-2048 # 40013800 <.LASF50+0x40013582>
  7c:	47d4                	lw	a3,12(a5)
  7e:	400147b7          	lui	a5,0x40014
  82:	80078793          	addi	a5,a5,-2048 # 40013800 <.LASF50+0x40013582>
  86:	6709                	lui	a4,0x2
  88:	06c70713          	addi	a4,a4,108 # 206c <.LASF50+0x1dee>
  8c:	8f55                	or	a4,a4,a3
  8e:	c7d8                	sw	a4,12(a5)
}
  90:	0001                	nop
  92:	4472                	lw	s0,28(sp)
  94:	6105                	addi	sp,sp,32
  96:	8082                	ret
